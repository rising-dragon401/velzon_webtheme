import{animateCSSModeScroll}from"../../shared/utils.js";export default function translateTo(t=0,n=this.params.speed,r=!0,e=!0,a){const i=this,{params:o,wrapperEl:s}=i;if(i.animating&&o.preventInteractionOnTransition)return!1;const l=i.minTranslate(),p=i.maxTranslate();let T;if(T=e&&t>l?l:e&&t<p?p:t,i.updateProgress(T),o.cssMode){const t=i.isHorizontal();if(0===n)s[t?"scrollLeft":"scrollTop"]=-T;else{if(!i.support.smoothScroll)return animateCSSModeScroll({swiper:i,targetPosition:-T,side:t?"left":"top"}),!0;s.scrollTo({[t?"left":"top"]:-T,behavior:"smooth"})}return!0}return 0===n?(i.setTransition(0),i.setTranslate(T),r&&(i.emit("beforeTransitionStart",n,a),i.emit("transitionEnd"))):(i.setTransition(n),i.setTranslate(T),r&&(i.emit("beforeTransitionStart",n,a),i.emit("transitionStart")),i.animating||(i.animating=!0,i.onTranslateToWrapperTransitionEnd||(i.onTranslateToWrapperTransitionEnd=function(t){i&&!i.destroyed&&t.target===this&&(i.wrapperEl.removeEventListener("transitionend",i.onTranslateToWrapperTransitionEnd),i.onTranslateToWrapperTransitionEnd=null,delete i.onTranslateToWrapperTransitionEnd,r&&i.emit("transitionEnd"))}),i.wrapperEl.addEventListener("transitionend",i.onTranslateToWrapperTransitionEnd))),!0}
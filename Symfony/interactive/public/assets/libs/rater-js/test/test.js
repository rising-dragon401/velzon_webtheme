var assert=require("assert"),raterJs=require("../lib/rater-js"),sinon=require("sinon"),jsdom=require("jsdom");const{JSDOM}=jsdom;describe("RaterJs",(function(){it("should throw when element is missing",(function(){assert.throws((()=>{raterJs()}))})),it("should create new rater without throwing error",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document,assert.doesNotThrow((()=>{raterJs({element:e})}))})),it("getRating should return null when no rating is set",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e});assert.equal(n.getRating(),null)})),it("getRating should return null after clear",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e});n.setRating(2),n.clear(),assert.equal(n.getRating(),null)})),it("getRating should return the initial rating",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e,rating:3});assert.equal(n.getRating(),3)})),it("getRating should return the changed rating",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e,rating:3});n.setRating(4),assert.equal(n.getRating(),4)})),it("should set rating from data-rating if present",(function(){const t=new JSDOM('<!DOCTYPE html><div data-rating="4" id="rater">test</div>').window.document.querySelector("#rater");let e=raterJs({element:t});assert.equal(e.getRating(),4)})),it("clicking a the star should trigger callback",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=sinon.spy();raterJs({element:e,rating:3,rateCallback:n});var r=global.document.createEvent("HTMLEvents");r.initEvent("click",!1,!0),e.dispatchEvent(r),sinon.assert.calledOnce(n)})),it("setRating should throw when rating is below 0",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e,rating:3});assert.throws((()=>{n.setRating(-1)})),assert.throws((()=>{n.setRating(-.1)}))})),it("setRating should throw when rating is above max",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e,max:5});assert.throws((()=>{n.setRating(6)})),assert.throws((()=>{n.setRating(5.1)}))})),it("setRating should throw when rating is not a number",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e,max:5});assert.throws((()=>{n.setRating(void 0)})),assert.throws((()=>{n.setRating("3")}))})),it("should throw when step is 0 or below",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document,assert.throws((()=>{raterJs({element:e,step:0})})),assert.throws((()=>{raterJs({element:e,step:-1e-4})}))})),it("should throw when step is above 1",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document,assert.throws((()=>{raterJs({element:e,step:1.0001})}))})),it("should not throw when step is between 0 and 1",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document,assert.doesNotThrow((()=>{raterJs({element:e,step:.01})})),assert.doesNotThrow((()=>{raterJs({element:e,step:.999})}))})),it("element should return original element",(function(){const t=new JSDOM('<!DOCTYPE html><div id="rater">test</div>'),e=t.window.document.querySelector("#rater");global.document=t.window.document;let n=raterJs({element:e});assert.equal(n.element,e)}))}));
import{deprecate}from"../utils/deprecate";import isArray from"../utils/is-array";import{createLocal}from"../create/local";import{createInvalid}from"../create/valid";export var prototypeMin=deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=createLocal.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:createInvalid()}));export var prototypeMax=deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=createLocal.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:createInvalid()}));function pickBy(e,t){var r,i;if(1===t.length&&isArray(t[0])&&(t=t[0]),!t.length)return createLocal();for(r=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](r)||(r=t[i]);return r}export function min(){return pickBy("isBefore",[].slice.call(arguments,0))}export function max(){return pickBy("isAfter",[].slice.call(arguments,0))}
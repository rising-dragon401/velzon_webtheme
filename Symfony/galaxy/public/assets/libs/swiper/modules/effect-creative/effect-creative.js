import createShadow from"../../shared/create-shadow.js";import effectInit from"../../shared/effect-init.js";import effectTarget from"../../shared/effect-target.js";import effectVirtualTransitionEnd from"../../shared/effect-virtual-transition-end.js";import{getSlideTransformEl}from"../../shared/utils.js";export default function EffectCreative({swiper:e,extendParams:t,on:r}){t({creativeEffect:{limitProgress:1,shadowPerProgress:!1,progressMultiplier:1,perspective:!0,prev:{translate:[0,0,0],rotate:[0,0,0],opacity:1,scale:1},next:{translate:[0,0,0],rotate:[0,0,0],opacity:1,scale:1}}});const s=e=>"string"==typeof e?e:`${e}px`;effectInit({effect:"creative",swiper:e,on:r,setTranslate:()=>{const{slides:t,wrapperEl:r,slidesSizesGrid:a}=e,i=e.params.creativeEffect,{progressMultiplier:o}=i,l=e.params.centeredSlides;if(l){const t=a[0]/2-e.params.slidesOffsetBefore||0;r.style.transform=`translateX(calc(50% - ${t}px))`}for(let r=0;r<t.length;r+=1){const a=t[r],n=a.progress,c=Math.min(Math.max(a.progress,-i.limitProgress),i.limitProgress);let f=c;l||(f=Math.min(Math.max(a.originalProgress,-i.limitProgress),i.limitProgress));const p=a.swiperSlideOffset,d=[e.params.cssMode?-p-e.translate:-p,0,0],m=[0,0,0];let h=!1;e.isHorizontal()||(d[1]=d[0],d[0]=0);let g={translate:[0,0,0],rotate:[0,0,0],scale:1,opacity:1};c<0?(g=i.next,h=!0):c>0&&(g=i.prev,h=!0),d.forEach(((e,t)=>{d[t]=`calc(${e}px + (${s(g.translate[t])} * ${Math.abs(c*o)}))`})),m.forEach(((e,t)=>{m[t]=g.rotate[t]*Math.abs(c*o)})),a.style.zIndex=-Math.abs(Math.round(n))+t.length;const w=d.join(", "),y=`rotateX(${m[0]}deg) rotateY(${m[1]}deg) rotateZ(${m[2]}deg)`,u=f<0?`scale(${1+(1-g.scale)*f*o})`:`scale(${1-(1-g.scale)*f*o})`,M=f<0?1+(1-g.opacity)*f*o:1-(1-g.opacity)*f*o,$=`translate3d(${w}) ${y} ${u}`;if(h&&g.shadow||!h){let e=a.querySelector(".swiper-slide-shadow");if(!e&&g.shadow&&(e=createShadow(i,a)),e){const t=i.shadowPerProgress?c*(1/i.limitProgress):c;e.style.opacity=Math.min(Math.max(Math.abs(t),0),1)}}const E=effectTarget(i,a);E.style.transform=$,E.style.opacity=M,g.origin&&(E.style.transformOrigin=g.origin)}},setTransition:t=>{const r=e.slides.map((e=>getSlideTransformEl(e)));r.forEach((e=>{e.style.transitionDuration=`${t}ms`,e.querySelectorAll(".swiper-slide-shadow").forEach((e=>{e.style.transitionDuration=`${t}ms`}))})),effectVirtualTransitionEnd({swiper:e,duration:t,transformElements:r,allSlides:!0})},perspective:()=>e.params.creativeEffect.perspective,overwriteParams:()=>({watchSlidesProgress:!0,virtualTranslate:!e.params.cssMode})})}
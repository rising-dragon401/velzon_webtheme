import{extend}from"../../shared/utils.js";const isGridEnabled=(e,i)=>e.grid&&i.grid&&i.grid.rows>1;export default function setBreakpoint(){const e=this,{realIndex:i,initialized:a,params:r,el:l}=e,n=r.breakpoints;if(!n||n&&0===Object.keys(n).length)return;const o=e.getBreakpoint(n,e.params.breakpointsBase,e.el);if(!o||e.currentBreakpoint===o)return;const s=(o in n?n[o]:void 0)||e.originalParams,t=isGridEnabled(e,r),d=isGridEnabled(e,s),c=r.enabled;t&&!d?(l.classList.remove(`${r.containerModifierClass}grid`,`${r.containerModifierClass}grid-column`),e.emitContainerClasses()):!t&&d&&(l.classList.add(`${r.containerModifierClass}grid`),(s.grid.fill&&"column"===s.grid.fill||!s.grid.fill&&"column"===r.grid.fill)&&l.classList.add(`${r.containerModifierClass}grid-column`),e.emitContainerClasses()),["navigation","pagination","scrollbar"].forEach((i=>{const a=r[i]&&r[i].enabled,l=s[i]&&s[i].enabled;a&&!l&&e[i].disable(),!a&&l&&e[i].enable()}));const p=s.direction&&s.direction!==r.direction,m=r.loop&&(s.slidesPerView!==r.slidesPerView||p);p&&a&&e.changeDirection(),extend(e.params,s);const b=e.params.enabled;Object.assign(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),c&&!b?e.disable():!c&&b&&e.enable(),e.currentBreakpoint=o,e.emit("_beforeBreakpoint",s),m&&a&&(e.loopDestroy(),e.loopCreate(i),e.updateSlides()),e.emit("breakpoint",s)}